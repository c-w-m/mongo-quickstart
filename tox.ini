# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# NOTE: This file must be located in the same directory as setup.py.
#
# Usage: Use to create virtual environments as defined in setup.py and .travis.yml.
#    When you run `tox` without arguments it will create dev27, dev36, dev37,
#    and bm36 in the /.tox directory (see each for specifics on what is run)
#
# Note: Once these virtual environments are run they can be used as the
#    development environment.
#
# Single tox Runs:                develop install (of arctic) for each
#    (.venv) $ tox -e dev27     # Python 2.7 tests amd pycodestyle
#    (.venv) $ tox -e dev36     # Python 3.6 tests amd pycodestyle
#    (.venv) $ tox -e dev37     # Python 3.7 tests amd pycodestyle
#    (.venv) $ tox -e bm36      # Python 2.7, 3.6, and 3.7 asv benchmarks
#
# Warning: setup.py test is deprecated and will be removed in a future version.
#    It would be better to port testing to tox and remove it from the setup.py.
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[tox]
envlist =
    # basic configurations: run tests for each python version
    dev{27,36,37}
    # benchmark configuration for asv
    bm36
skipsdist = True
skip_missing_interpreters = True

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# configuration prescribed by `docs/contributing.md` and `.travis.yml`
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[testenv]
basepython =
    dev27: python2.7
    dev36: python3.6
    dev37: python3.7
    bm36: python3.6
setenv =
    PIP_DISABLE_PIP_VERSION_CHECK = 1
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv = *
deps =
    pip
    mongoengine
commands =
    pip install --upgrade pip
    python -m pip install --upgrade pip
    pip install mongoengine

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# (.venv) $ tox -e dev27
# (.venv) $ tox -e dev36
# or
# (.venv) $ tox -e dev37
# -----------------------------------------------------------------------------
[testenv:dev{27,36,37}]
deps = {[testenv]deps}
usedevelop = True
commands =
    python -c 'print((80*"~")+"\ndev-{basepython}\n"+(80*"~"))'

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# (.venv) $ tox -e bm36
# Note: asv creates multiple env based on asv.conf.json so we only need this
#       environment from which we can `asv run`
# -----------------------------------------------------------------------------
[testenv:bm36]
sitepackages = False
usedevelop = True
install_command = pip install {opts} {packages}
deps =
    {[testenv]deps}
    virtualenv
setenv =
  PATH = {toxinidir}{:}{env:PATH}
commands =
    python -c 'print((80*"~")+"\nbm36: pip install asv\n"+(80*"~"))'
    pip install asv
    python -c 'print((80*"~")+"\nbm36: pip list\n"+(80*"~"))'
    python -m pip list --format=columns
    python -c 'print((80*"~")+"\nbm36: pip freeze\n"+(80*"~"))'
    pip freeze
    python -c 'print((80*"~")+"\nbm36: asv run (for arctic)\n"+(80*"~"))'
    asv run
    python -c 'print((80*"~")+"\nbm36: complete\n"+(80*"~"))'
